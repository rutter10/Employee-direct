{"version":3,"sources":["utils/api.js","components/DataBody.js","components/DataTable.js","components/SearchBox.js","components/Nav.js","components/DataArea.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","get","DataBody","_ref","users","react_default","a","createElement","undefined","name","map","_ref2","login","picture","phone","email","dob","key","uuid","data-th","src","medium","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","Fragment","DataTable","headings","handleSort","id","width","style","onClick","toLowerCase","className","components_DataBody","SearchBox","handleSearchChange","type","placeholder","aria-label","onChange","e","class","Nav","components_SearchBox","DataArea","state","order","filteredUsers","heading","_this","setState","sortedUsers","sort","b","localeCompare","event","console","log","value","filter","filteredList","item","Object","values","indexOf","_this2","this","then","results","data","components_Nav","components_DataTable","Component","Main","DataArea_DataArea","App","Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8QAEeA,EACH,WACR,OAAOC,IAAMC,IAAI,kDC6CNC,MA/Cf,SAAAC,GAA6B,IAATC,EAASD,EAATC,MAWlB,OACEC,EAAAC,EAAAC,cAAA,kBACgBC,IAAbJ,EAAM,SAAsCI,IAAlBJ,EAAM,GAAGK,KAClCL,EAAMM,IAAI,SAAAC,GAAiD,IAA9CC,EAA8CD,EAA9CC,MAAOH,EAAuCE,EAAvCF,KAAMI,EAAiCF,EAAjCE,QAASC,EAAwBH,EAAxBG,MAAOC,EAAiBJ,EAAjBI,MAAOC,EAAUL,EAAVK,IAC/C,OACEX,EAAAC,EAAAC,cAAA,MAAIU,IAAKL,EAAMM,MACbb,EAAAC,EAAAC,cAAA,MAAIY,UAAQ,SACVd,EAAAC,EAAAC,cAAA,OACEa,IAAKP,EAAQQ,OACbC,IAAK,qBAAuBb,EAAKc,MAAQ,IAAMd,EAAKe,QAGxDnB,EAAAC,EAAAC,cAAA,MAAIY,UAAQ,QACTV,EAAKc,MADR,IACgBd,EAAKe,MAErBnB,EAAAC,EAAAC,cAAA,MAAIY,UAAQ,SACTL,GAEHT,EAAAC,EAAAC,cAAA,MAAIY,UAAQ,SACVd,EAAAC,EAAAC,cAAA,KAAGkB,KAAM,UAAYV,EAAOW,OAAO,WAChCX,IAGLV,EAAAC,EAAAC,cAAA,MAAIY,UAAQ,OAjCxB,SAAoBQ,GAClB,IAAMC,EAAYD,EAAKE,MAAM,KACvBC,EAAOF,EAAU,GAKvB,MADsB,CAHRA,EAAU,GACPA,EAAU,GAAGC,MAAM,KACf,GACcC,GAAMC,KAAK,KA4BjCC,CAAWhB,EAAIW,UAMxBtB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,QCTOC,MA/Bf,SAAA/B,GAAoD,IAA/BgC,EAA+BhC,EAA/BgC,SAAU/B,EAAqBD,EAArBC,MAAOgC,EAAcjC,EAAdiC,WACpC,OACE/B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACE8B,GAAG,SAEHhC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACG4B,EAASzB,IAAI,SAAAC,GAAqB,IAAlBF,EAAkBE,EAAlBF,KAAM6B,EAAY3B,EAAZ2B,MACrB,OACEjC,EAAAC,EAAAC,cAAA,MACEU,IAAKR,EACL8B,MAAO,CAAED,SACTE,QAAS,WACPJ,EAAW3B,EAAKgC,iBAGjBhC,EACDJ,EAAAC,EAAAC,cAAA,QAAMmC,UAAU,iBAO1BrC,EAAAC,EAAAC,cAACoC,EAAD,CAAUvC,MAAOA,OCVVwC,MAhBf,SAAAzC,GAA2C,IAAtB0C,EAAsB1C,EAAtB0C,mBACnB,OACExC,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,aACbrC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SACEmC,UAAU,SACVI,KAAK,SACLC,YAAY,SACZC,aAAW,SACXC,SAAU,SAAAC,GAAC,OAAIL,EAAmBK,MAEpC7C,EAAAC,EAAAC,cAAA,KAAG4C,MAAM,mBCDFC,MATf,SAAAjD,GAAqC,IAAtB0C,EAAsB1C,EAAtB0C,mBACb,OACExC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK8B,GAAG,aACNhC,EAAAC,EAAAC,cAAC8C,EAAD,CAAWR,mBAAoBA,OCFlBS,8MACnBC,MAAQ,CACNnD,MAAO,CAAC,IACRoD,MAAO,UACPC,cAAe,CAAC,OAGlBtB,SAAW,CACT,CAAE1B,KAAM,QAAS6B,MAAO,OACxB,CAAE7B,KAAM,OAAQ6B,MAAO,OACvB,CAAE7B,KAAM,QAAS6B,MAAO,OACxB,CAAE7B,KAAM,QAAS6B,MAAO,OACxB,CAAE7B,KAAM,MAAO6B,MAAO,UAGxBF,WAAa,SAAAsB,GACc,YAArBC,EAAKJ,MAAMC,MACbG,EAAKC,SAAS,CACZJ,MAAO,WAGTG,EAAKC,SAAS,CACZJ,MAAO,YAIX,IA8BMK,EAAcF,EAAKJ,MAAME,cAAcK,KA9B1B,SAACxD,EAAGyD,GACrB,MAAyB,WAArBJ,EAAKJ,MAAMC,WAEMhD,IAAfF,EAAEoD,GACG,OACiBlD,IAAfuD,EAAEL,IACH,EAGW,SAAZA,EACApD,EAAEoD,GAASnC,MAAMyC,cAAcD,EAAEL,GAASnC,OAE1CjB,EAAEoD,GAAWK,EAAEL,QAILlD,IAAfF,EAAEoD,GACG,OACiBlD,IAAfuD,EAAEL,IACH,EAGW,SAAZA,EACAK,EAAEL,GAASnC,MAAMyC,cAAc1D,EAAEoD,GAASnC,OAE1CwC,EAAEL,GAAWpD,EAAEoD,KAM5BC,EAAKC,SAAS,CAAEH,cAAeI,OAGjChB,mBAAqB,SAAAoB,GACnBC,QAAQC,IAAIF,EAAMvC,OAAO0C,OACzB,IAAMC,EAASJ,EAAMvC,OAAO0C,MACtBE,EAAeX,EAAKJ,MAAMnD,MAAMiE,OAAO,SAAAE,GAK3C,OAAiD,IAHpCC,OAAOC,OAAOF,GACxBxC,KAAK,IACLU,cACWiC,QAAQL,EAAO5B,iBAE/BkB,EAAKC,SAAS,CAAEH,cAAea,4DAGjC,WAAoB,IAAAK,EAAAC,KAClB7E,IAAe8E,KAAK,SAAAC,GAClBH,EAAKf,SAAS,CACZxD,MAAO0E,EAAQC,KAAKD,QACpBrB,cAAeqB,EAAQC,KAAKD,kCAKlC,WACE,OACEzE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2B,SAAA,KACE5B,EAAAC,EAAAC,cAACyE,EAAD,CAAKnC,mBAAoB+B,KAAK/B,qBAC9BxC,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,4BACbrC,EAAAC,EAAAC,cAAC0E,EAAD,CACE9C,SAAUyC,KAAKzC,SACf/B,MAAOwE,KAAKrB,MAAME,cAClBrB,WAAYwC,KAAKxC,sBA1FS8C,aCFjBC,8JACnB,WACE,OACE9E,EAAAC,EAAAC,cAAC6E,EAAD,aAH4BF,aCUnBG,MARf,WACE,OACEhF,EAAAC,EAAAC,cAAA,OAAKmC,UAAU,aACbrC,EAAAC,EAAAC,cAAC+E,EAAD,QCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECXNC,IAASC,OAAOxF,EAAAC,EAAAC,cAACuF,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtB,KAAK,SAAAuB,GACjCA,EAAaC","file":"static/js/main.23f0f478.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n  getUsers: () => {\r\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nfunction DataBody({ users }) {\r\n  function formatDate(date) {\r\n    const dateArray = date.split(\"-\");\r\n    const year = dateArray[0];\r\n    const month = dateArray[1];\r\n    const dayArray = dateArray[2].split(\"T\");\r\n    const day = dayArray[0];\r\n    const formattedDate = [month, day, year].join(\"-\");\r\n    return formattedDate;\r\n  }\r\n\r\n  return (\r\n    <tbody>\r\n      {users[0] !== undefined && users[0].name !== undefined ? (\r\n        users.map(({ login, name, picture, phone, email, dob }) => {\r\n          return (\r\n            <tr key={login.uuid}>\r\n              <td data-th=\"Image\">\r\n                <img\r\n                  src={picture.medium}\r\n                  alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                />\r\n              </td>\r\n              <td data-th=\"Name\" >\r\n                {name.first} {name.last}\r\n              </td>\r\n              <td data-th=\"Phone\">\r\n                {phone}\r\n              </td>\r\n              <td data-th=\"Email\" >\r\n                <a href={\"mailto:\" + email} target=\"__blank\">\r\n                  {email}\r\n                </a>\r\n              </td>\r\n              <td data-th=\"DOB\" >\r\n                {formatDate(dob.date)}\r\n              </td>\r\n            </tr>\r\n          );\r\n        })\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\n\r\nexport default DataBody;\r\n","import React from \"react\";\r\nimport DataBody from \"./DataBody\";\r\n\r\nfunction DataTable({ headings, users, handleSort }) {\r\n  return (\r\n    <div>\r\n      <table\r\n        id=\"table\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            {headings.map(({ name, width }) => {\r\n              return (\r\n                <th\r\n                  key={name}\r\n                  style={{ width }}\r\n                  onClick={() => {\r\n                    handleSort(name.toLowerCase());\r\n                  }}\r\n                >\r\n                  {name}\r\n                  <span className=\"pointer\"></span>\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        </thead>\r\n\r\n        <DataBody users={users} />\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n","import React from \"react\";\r\n\r\nfunction SearchBox({ handleSearchChange }) {\r\n  return (\r\n    <div className=\"ui search\">\r\n      <form>\r\n        <input\r\n          className=\"prompt\"\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          aria-label=\"Search\"\r\n          onChange={e => handleSearchChange(e)}\r\n        />\r\n        <i class=\"search icon\"></i>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport SearchBox from \"./SearchBox.js\";\r\n\r\nfunction Nav({ handleSearchChange }) {\r\n  return (\r\n    <nav>\r\n      <div id=\"navbarNav\">\r\n        <SearchBox handleSearchChange={handleSearchChange} />\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\r\nimport api from \"../utils/api\";\r\nimport DataTable from \"./DataTable\";\r\nimport Nav from \"./Nav\";\r\n\r\nexport default class DataArea extends Component {\r\n  state = {\r\n    users: [{}],\r\n    order: \"descend\",\r\n    filteredUsers: [{}]\r\n  };\r\n\r\n  headings = [\r\n    { name: \"Image\", width: \"10%\" },\r\n    { name: \"Name\", width: \"10%\" },\r\n    { name: \"Phone\", width: \"20%\" },\r\n    { name: \"Email\", width: \"20%\" },\r\n    { name: \"DOB\", width: \"10%\" }\r\n  ];\r\n\r\n  handleSort = heading => {\r\n    if (this.state.order === \"descend\") {\r\n      this.setState({\r\n        order: \"ascend\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        order: \"descend\"\r\n      });\r\n    }\r\n\r\n    const compareFnc = (a, b) => {\r\n      if (this.state.order === \"ascend\") {\r\n        // account for missing values\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        }\r\n        // numerically\r\n        else if (heading === \"name\") {\r\n          return a[heading].first.localeCompare(b[heading].first);\r\n        } else {\r\n          return a[heading] - b[heading];\r\n        }\r\n      } else {\r\n        // account for missing values\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        }\r\n        // numerically\r\n        else if (heading === \"name\") {\r\n          return b[heading].first.localeCompare(a[heading].first);\r\n        } else {\r\n          return b[heading] - a[heading];\r\n        }\r\n      }\r\n\r\n    };\r\n    const sortedUsers = this.state.filteredUsers.sort(compareFnc);\r\n    this.setState({ filteredUsers: sortedUsers });\r\n  };\r\n\r\n  handleSearchChange = event => {\r\n    console.log(event.target.value);\r\n    const filter = event.target.value;\r\n    const filteredList = this.state.users.filter(item => {\r\n      // merge data together, then see if user input is anywhere inside\r\n      let values = Object.values(item)\r\n        .join(\"\")\r\n        .toLowerCase();\r\n      return values.indexOf(filter.toLowerCase()) !== -1;\r\n    });\r\n    this.setState({ filteredUsers: filteredList });\r\n  };\r\n\r\n  componentDidMount() {\r\n    api.getUsers().then(results => {\r\n      this.setState({\r\n        users: results.data.results,\r\n        filteredUsers: results.data.results\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Nav handleSearchChange={this.handleSearchChange} />\r\n        <div className=\"ui sortable celled table\">\r\n          <DataTable\r\n            headings={this.headings}\r\n            users={this.state.filteredUsers}\r\n            handleSort={this.handleSort}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport DataArea from \"./DataArea\";\r\n\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n      <DataArea />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Main from \"./components/Main\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}